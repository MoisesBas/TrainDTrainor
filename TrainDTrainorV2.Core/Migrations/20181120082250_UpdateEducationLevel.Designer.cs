// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainDTrainorV2.Core.Data;

namespace TrainDTrainorV2.Core.Migrations
{
    [DbContext(typeof(TrainDTrainorContext))]
    [Migration("20181120082250_UpdateEducationLevel")]
    partial class UpdateEducationLevel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.CourseMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<Guid?>("CourseId")
                        .IsRequired()
                        .HasColumnName("CourseId");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MaterialMongoDbId")
                        .HasColumnName("MaterialMongoDbId")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<int>("Type")
                        .HasColumnName("Type");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("tblCourseMaterial","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasColumnName("DegreeName")
                        .HasMaxLength(256);

                    b.Property<string>("EducationLevel")
                        .HasColumnName("EducationLevel")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("NameOfInstitute")
                        .HasColumnName("NameOfInstitute")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<Guid?>("UserProfileId")
                        .HasColumnName("UserProfileId");

                    b.Property<int>("Year")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tblUserProfileEducations","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.EmailDelivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("Attempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Attempts")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("Delivered")
                        .HasColumnName("Delivered");

                    b.Property<string>("Error")
                        .HasColumnName("Error");

                    b.Property<string>("From")
                        .HasColumnName("From")
                        .HasMaxLength(265);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDelivered")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDelivered")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsProcessing")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsProcessing")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset?>("LastAttempt")
                        .HasColumnName("LastAttempt");

                    b.Property<byte[]>("MimeMessage")
                        .HasColumnName("MimeMessage");

                    b.Property<DateTimeOffset?>("NextAttempt")
                        .HasColumnName("NextAttempt");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("SmtpLog")
                        .HasColumnName("SmtpLog");

                    b.Property<string>("Subject")
                        .HasColumnName("Subject")
                        .HasMaxLength(265);

                    b.Property<string>("To")
                        .HasColumnName("To")
                        .HasMaxLength(265);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblEmailDeliverys","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnName("FromAddress")
                        .HasMaxLength(256);

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasColumnName("FromName")
                        .HasMaxLength(256);

                    b.Property<string>("HtmlBody")
                        .HasColumnName("HtmlBody");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnName("Key")
                        .HasMaxLength(100);

                    b.Property<string>("ReplyToAddress")
                        .HasColumnName("ReplyToAddress")
                        .HasMaxLength(256);

                    b.Property<string>("ReplyToName")
                        .HasColumnName("ReplyToName")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("Subject")
                        .HasColumnName("Subject");

                    b.Property<string>("TextBody")
                        .HasColumnName("TextBody");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblEmailTemplates","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblLevels","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.LevelQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("LevelId")
                        .HasColumnName("LevelId");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<int>("QuestionType")
                        .HasColumnName("QuestionType");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("tblLevelQuestions","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.LevelVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("LevelId")
                        .IsRequired()
                        .HasColumnName("LevelId");

                    b.Property<string>("MongoDbLevelVideoId")
                        .HasColumnName("MongoDbLevelVideoId")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("tblLevelVideos","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PaymentMongoDbId")
                        .IsRequired()
                        .HasColumnName("PaymentMongoDbId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<int>("Status")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TrainingId");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<Guid?>("UserProfileId")
                        .IsRequired()
                        .HasColumnName("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tblPaymentTransactions","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("ClientId")
                        .HasColumnName("ClientId")
                        .HasMaxLength(450);

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnName("Expires");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset>("Issued")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Issued")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("ProtectedTicket")
                        .HasColumnName("ProtectedTicket");

                    b.Property<string>("TokenHashed")
                        .IsRequired()
                        .HasColumnName("TokenHashed")
                        .HasMaxLength(256);

                    b.Property<Guid>("UserId")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblRefreshToken","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblRoles","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.SMSDelivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("Attempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Attempts")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("Delivered")
                        .HasColumnName("Delivered");

                    b.Property<string>("Error")
                        .HasColumnName("Error");

                    b.Property<string>("From")
                        .HasColumnName("From")
                        .HasMaxLength(265);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDelivered")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDelivered")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsProcessing")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsProcessing")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset?>("LastAttempt")
                        .HasColumnName("LastAttempt");

                    b.Property<string>("Message")
                        .HasColumnName("Message")
                        .HasMaxLength(265);

                    b.Property<DateTimeOffset?>("NextAttempt")
                        .HasColumnName("NextAttempt");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("SMSLog")
                        .HasColumnName("SMSLog");

                    b.Property<string>("To")
                        .HasColumnName("To")
                        .HasMaxLength(265);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblSMSDeliveries","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.SMSTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("From")
                        .HasColumnName("From");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("TextBody")
                        .HasColumnName("TextBody");

                    b.Property<string>("To")
                        .HasColumnName("To");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblSMSTemplates","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TraineeEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<int>("Evaluation")
                        .HasColumnName("Evaluation");

                    b.Property<Guid?>("EvaluatorId")
                        .IsRequired()
                        .HasColumnName("EvaluatorId");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<Guid?>("TrainingBuildCourseId");

                    b.Property<Guid?>("TrainingCourseAttendeeId")
                        .IsRequired()
                        .HasColumnName("TrainingCourseAttendeeId");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EvaluatorId");

                    b.HasIndex("TrainingBuildCourseId");

                    b.HasIndex("TrainingCourseAttendeeId");

                    b.ToTable("tblTraineeEvaluations","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TraineeEvaluationVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<Guid?>("CourseLevelId")
                        .IsRequired()
                        .HasColumnName("CourseLevelId");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MongoCourseLevelVideoId")
                        .IsRequired()
                        .HasColumnName("MongoCourseLevelVideoId")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<Guid?>("TrainingBuildCourseAttendeeId")
                        .IsRequired()
                        .HasColumnName("TrainingBuildCourseAttendeeId");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CourseLevelId");

                    b.HasIndex("TrainingBuildCourseAttendeeId");

                    b.ToTable("tblTraineeEvaluationVideos","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblTrainings","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<Guid?>("CourseId")
                        .IsRequired()
                        .HasColumnName("CourseId");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("LevelId")
                        .IsRequired()
                        .HasColumnName("LevelId");

                    b.Property<Guid?>("QuestionId")
                        .IsRequired()
                        .HasColumnName("QuestionId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LevelId");

                    b.HasIndex("QuestionId");

                    b.ToTable("tblTrainingBuildCourses","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourseAttendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnName("AttendeeId");

                    b.Property<Guid>("CourseId")
                        .HasColumnName("CourseId");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AttendeeId");

                    b.HasIndex("CourseId");

                    b.ToTable("tblTrainingBuildCourseAttendees","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<short>("CalendarYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CalendarYear")
                        .HasDefaultValueSql("(datepart(year,getdate()))");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Objectives")
                        .HasColumnName("Objectives")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasMaxLength(256);

                    b.Property<Guid?>("TrainingId");

                    b.Property<Guid?>("TrainorId")
                        .HasColumnName("TrainorId");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("TrainorId");

                    b.ToTable("tblTrainingCourses","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasMaxLength(256);

                    b.Property<Guid?>("TrainingId");

                    b.Property<string>("TrainingMongDbId")
                        .IsRequired()
                        .HasColumnName("TrainingMongDbId")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("tblTrainingVideos","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccessFailedCount")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("DisplayName")
                        .HasMaxLength(256);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("InviteHash")
                        .HasColumnName("InviteHash");

                    b.Property<bool>("IsAgree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsAgree")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsEmailAddressConfirmed")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsGlobalAdministrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsGlobalAdministrator")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsPhoneNumberConfirmed")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset?>("LastLogin")
                        .HasColumnName("LastLogin");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LockoutEnabled")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("LockoutEnd");

                    b.Property<string>("OTP")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OTP")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasMaxLength(15);

                    b.Property<string>("ResetHash")
                        .HasColumnName("ResetHash");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tblUsers","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Browser")
                        .HasColumnName("Browser")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("DeviceBrand")
                        .HasColumnName("DeviceBrand")
                        .HasMaxLength(256);

                    b.Property<string>("DeviceFamily")
                        .HasColumnName("DeviceFamily")
                        .HasMaxLength(256);

                    b.Property<string>("DeviceModel")
                        .HasColumnName("DeviceModel")
                        .HasMaxLength(256);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("FailureMessage")
                        .HasColumnName("FailureMessage")
                        .HasMaxLength(256);

                    b.Property<string>("IpAddress")
                        .HasColumnName("IpAddress")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsSuccessful")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsSuccessful")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("OperatingSystem")
                        .HasColumnName("OperatingSystem")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("UserAgent")
                        .HasColumnName("UserAgent");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserLogins","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("Age")
                        .HasColumnName("Age")
                        .HasMaxLength(10);

                    b.Property<string>("BusinessPhone")
                        .HasColumnName("BusinessPhone")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnName("City ")
                        .HasMaxLength(190);

                    b.Property<string>("Country")
                        .HasColumnName("Country ")
                        .HasMaxLength(150);

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("FullName")
                        .HasColumnName("FullName ")
                        .HasMaxLength(256);

                    b.Property<string>("Gender")
                        .HasColumnName("Gender")
                        .HasMaxLength(10);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsPaid")
                        .HasColumnName("IsPaid");

                    b.Property<string>("JobTitle")
                        .HasColumnName("JobTitle")
                        .HasMaxLength(256);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnName("MobilePhone")
                        .HasMaxLength(50);

                    b.Property<string>("MongoDbProfileCVId")
                        .HasColumnName("MongoDbProfileCVId")
                        .HasMaxLength(90);

                    b.Property<string>("Nationality")
                        .HasColumnName("Nationality")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ProfilePicId")
                        .HasColumnName("ProfilePicId")
                        .HasMaxLength(90);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tblUserProfiles","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfileAchievements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<Guid?>("UserProfileId")
                        .HasColumnName("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tblUserProfileAchievements","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfileJobHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("CompanyAddress")
                        .HasColumnName("CompanyAddress")
                        .HasMaxLength(150);

                    b.Property<string>("CompanyName")
                        .HasColumnName("CompanyName")
                        .HasMaxLength(150);

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("From")
                        .HasColumnName("To");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("JobField")
                        .HasColumnName("JobField")
                        .HasMaxLength(150);

                    b.Property<string>("Position")
                        .HasColumnName("Position")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("RowVersion")
                        .HasMaxLength(8);

                    b.Property<DateTime?>("To")
                        .HasColumnName("UserProfileJobHistory_To");

                    b.Property<DateTimeOffset>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Updated")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasMaxLength(100);

                    b.Property<Guid?>("UserProfileId")
                        .IsRequired()
                        .HasColumnName("UserProfileId");

                    b.Property<string>("WorkType")
                        .HasColumnName("WorkType")
                        .HasMaxLength(90);

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tblUserProfileJobHistories","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfilePic", b =>
                {
                    b.Property<Guid>("Stream_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Creation_time");

                    b.Property<byte[]>("File_stream");

                    b.Property<bool>("Is_archive");

                    b.Property<bool>("Is_directory");

                    b.Property<bool>("Is_hidden");

                    b.Property<bool>("Is_offline");

                    b.Property<bool>("Is_readonly");

                    b.Property<bool>("Is_system");

                    b.Property<bool>("Is_temporary");

                    b.Property<DateTimeOffset>("Last_access_time");

                    b.Property<DateTimeOffset>("Last_write_time");

                    b.Property<string>("Name");

                    b.Property<string>("ParentPath");

                    b.Property<string>("Path");

                    b.Property<string>("fullpath");

                    b.HasKey("Stream_id");

                    b.ToTable("UserProfilePic_View");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("RoleId");

                    b.Property<byte[]>("RowVersion");

                    b.Property<DateTimeOffset>("Updated");

                    b.Property<string>("UpdatedBy");

                    b.Property<Guid>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserRoles","dbo");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.CourseMaterial", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingCourse", "Course")
                        .WithMany("CourseMaterials")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_CourseMaterials_Course_CourseId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.Education", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.UserProfile", "UserProfile")
                        .WithMany("Educations")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_Educations_UserProfile_UserProfileId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.LevelQuestion", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Level", "CourseLevel")
                        .WithMany("LevelQuestions")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_LevelQuestions_Level_LevelId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.LevelVideo", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Level", "Level")
                        .WithMany("LevelVideos")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_LevelVideos_Level_LevelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Training", "Training")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("TrainingId")
                        .HasConstraintName("FK_PaymentTransactions_Training_TrainingId");

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.UserProfile", "UserProfile")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_PaymentTransactions_UserProfile_UserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_RefreshToken_User_UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TraineeEvaluation", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "Evaluator")
                        .WithMany()
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourse", "TrainingBuildCourse")
                        .WithMany()
                        .HasForeignKey("TrainingBuildCourseId");

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourseAttendee", "TrainingCourseAttendee")
                        .WithMany("TraineeEvaluations")
                        .HasForeignKey("TrainingCourseAttendeeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TraineeEvaluationVideo", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Level", "CourseLevel")
                        .WithMany()
                        .HasForeignKey("CourseLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourseAttendee", "TrainingBuildCourseAttendee")
                        .WithMany("TraineeEvaluationVideos")
                        .HasForeignKey("TrainingBuildCourseAttendeeId")
                        .HasConstraintName("FK_TraineeEvaluationVideos_TrainingBuildCourseAttendee_TrainingBuildCourseAttendeeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourse", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingCourse", "Course")
                        .WithMany("TrainingBuildCourses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_TrainingBuildCourses_Course_CourseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Level", "Level")
                        .WithMany("TrainingBuildCourses")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_TrainingBuildCourses_Level_LevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.LevelQuestion", "Question")
                        .WithMany("TrainingBuildCourses")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK_TrainingBuildCourses_Question_QuestionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingBuildCourseAttendee", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "Attendee")
                        .WithMany("UserTrainings")
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.TrainingCourse", "Course")
                        .WithMany("TrainingCourseAttendees")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingCourse", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Training", "Training")
                        .WithMany("TrainingCourses")
                        .HasForeignKey("TrainingId")
                        .HasConstraintName("FK_TrainingCourses_Training_TrainingId");

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "Trainor")
                        .WithMany("UserCourses")
                        .HasForeignKey("TrainorId")
                        .HasConstraintName("FK_UserCourses_Trainor_TrainorId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.TrainingVideo", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Training", "Training")
                        .WithMany("TrainingVideos")
                        .HasForeignKey("TrainingId")
                        .HasConstraintName("FK_TrainingVideos_Training_TrainingId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserLogin_User_UserId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfile", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "User")
                        .WithOne("UserProfiles")
                        .HasForeignKey("TrainDTrainorV2.Core.Data.Entities.UserProfile", "UserId")
                        .HasConstraintName("FK_UserProfiles_User_UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfileAchievements", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.UserProfile", "UserProfile")
                        .WithMany("Achievements")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_Achievements_UserProfile_UserProfileId");
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserProfileJobHistory", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.UserProfile", "UserProfile")
                        .WithMany("JobHistories")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_JobHistories_UserProfile_UserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TrainDTrainorV2.Core.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role_RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TrainDTrainorV2.Core.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User_UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
